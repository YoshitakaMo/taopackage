#!/usr/bin/perl

use lib "REPLACETHISPATHPLEASE";
use File::Basename;
use ESPT::SETMVFLG 0.01;
use strict;

=head1 NAME

SETMVFLG - Resets the Gaussian optimization flags in a Gaussian ONIOM input file

=head1 SYNOPSIS

B<setmvflg> [ B<-b> ] [ B<-d?> (?:1~3) ] [ B<-h> ] [ B<-i> F<ONIOM_input_file> ] [ B<-near> number ]
[ B<-o> F<ONIOM_input_file> ] [ B<-onb> F<ONB_file_name> ] [ B<-q> ] [ B<-resid> F<listfile> ]

=head1 DESCRIPTION

This program resets the optimization flags (0 or -1) in a Gaussian ONIOM input file based
on the ONB file (generated by pdb2oniom), core residues list file (listfile), and a distance
from the core residues to define the moving region.

=cut

### Version History ###
# 1.0   Redefine moving region for given Gaussian ONIOM input file.
#
# 2009 Peng Tao

### To Do List ###
#

### Main Program ###
our $version = "1.0";

# check for arguments
usage() if ( $#ARGV < 0 );

help() if $ARGV[0] eq "-h";
help() if $ARGV[0] eq "--help";

our ($debug, $file, $useONBcoord, $newoniomfile, $onbfile);
our ($listresid, $near);

# parse arguments
for (my $i=0; $i<=$#ARGV; $i++) {
	$debug = 1 if $ARGV[$i] eq "-d";
	$debug = -1 if $ARGV[$i] eq "-q";
	$debug = 0 if $ARGV[$i] eq "-d0";
        $debug = 1 if $ARGV[$i] eq "-d1";
        $debug = 2 if $ARGV[$i] eq "-d2";
        $debug = 3 if $ARGV[$i] eq "-d3";
        $debug = 4 if $ARGV[$i] eq "-d4";
        $debug = 5 if $ARGV[$i] eq "-d5";
        $debug = 6 if $ARGV[$i] eq "-d6";
        $useONBcoord = 1 if $ARGV[$i] eq "-b";
        $listresid=$ARGV[$i + 1] if $ARGV[$i] eq "-resid";
        $near=$ARGV[$i + 1] if $ARGV[$i] eq "-near";
        $file = $ARGV[$i + 1] if $ARGV[$i] eq "-i";
        $newoniomfile = $ARGV[$i + 1] if $ARGV[$i] eq "-o";
        $onbfile = $ARGV[$i + 1] if $ARGV[$i] eq "-onb";

}

# set defaults
$debug ||= 0;
$near ||= 6.0;
$useONBcoord ||= 0;
$newoniomfile ||= "ONIOM_NEW_Moving_Flag.gjf" ;

print "\nSETMVFLG $version : Resets optimization flag for a Gaussian ONIOM input file (0/-1)\n\n" if $debug >= 0;

if (not (defined $listresid)) {
 print "A core residues list file is needed. Using flag -resid to provide this file.\n" if $debug >= 0;
 die "Exit SETMVFLG\n$!\n";
}

if (not (defined $onbfile)) {
 print "An ONB file is needed. Using flag -onb to provide this file.\n" if $debug >= 0;
 die "Exit SETMVFLG\n$!\n";
}

if (not (defined $file)) {
 print "A Gaussian ONIOM INPUT file is needed. Using flag -i to provide this file.\n" if $debug >= 0;
 die "Exit SETMVFLG\n$!\n";
}

if ($useONBcoord == 0){
 print "\nUse coordinates from file $file to reset optimization flag.\n" if $debug >= 0;
} else {
 print "\nUse coordinates from file $onbfile to reset optimization flag.\n" if $debug >= 0;
}

=head1 OPTIONS

Command line option specifications are processed from left to right and may
be specified more than once. If conflicting options are specified, later
specifications override earlier ones.

=over 16

=item B<-b>

When set, the coordinates from the ONB file (generated from the original PDB file)
will be used for setting the optimization flags. when not set (default), the coordinates
from the Gaussian ONIOM input file will be used for setting the optimization flags.

In either case, the generated Gaussian ONIOM input file has the same coordinates
as the given Gaussian ONIOM input file.


=item B<-d?> (?:0~3)

Turn on debug printing. The printing level can be controlled by a given number.
The larger the number, the more information will be printed when the program is running.


=item B<-h>

=item B<--help>

Print full SETMVFLG documentation via perldoc. Cannot be used with other options.


=item B<-i> F<ONIOM_input_file>

Gaussian ONIOM job file used for resetting the optimization flags.


=item B<-near> number

number is in Angstroms. Any residue with at least one atom within this distance
of any atom in the core residues will be free to move during the optimization process
(with flag 0 in the Gaussian ONIOM job file). Default is 6.0 A.


=item B<-o> F<ONIOM_input_file>

Gaussian ONIOM input file with new optimization flag setup.
Default is ONIOM_NEW_Moving_Flag.gjf.


=item B<-onb> F<ONB_file_name>

ONB file for SETMVFLG containing the residue information.


=item B<-q>

Run in quiet mode and do not print progress messages.


=item B<-resid> F<listfile>

File that has the list of core residues. The distance between atoms and these core residues
will be used to set up the optimization flags. The file format is
[Residue Name] "Residue ID", eg:

[GLU] "345"

[ASP] "233"

[GLY] "344"

Information for each core residue needs to be on a separate line.

Please note that Residue ID is a string, which can contain both the residue number and chain name,
for example "A 345" (residue 345 in chain A) may also be used as Residue ID.

=back

=cut

#print "Processing a ", $input->get("PROGRAM"), " ", $input->get("TYPE"), " file.\n" if $debug >= 0;

our ($setmvflg);

$setmvflg = ESPT::SETMVFLG->new();

$setmvflg->{DEBUG} = $debug;
$setmvflg->{UseONBCoord} = $useONBcoord;

$setmvflg->{RESIDFILE} = $listresid;

$setmvflg->{NEAR}          = $near;
$setmvflg->{ModelGjfFile}  = $file;
$setmvflg->{ModelONBFile}  = $onbfile;
$setmvflg->{ModelNewInput} = $newoniomfile;

# read file contents
$setmvflg->debug($debug);
$setmvflg->analyze();

# Build output file name
print "Output file name is ",$newoniomfile,"\n" if $debug >= 0;

$setmvflg->flagsetsummary();

$setmvflg->writemodeloniom();


print "\nSuccessfully wrote ", $newoniomfile, " file.\n" if $debug >= 0;

print "\nSETMVFLG ends.\n\n" if $debug >= 0;


## Subroutines ##

# display help on usage
sub help {
	system("perldoc REPLACETHISPATHPLEASE/scripts/setmvflg.pl");
	exit;
}

sub usage {
        print "\nSETMVFLG $version : Resets optimization flag for a Gaussian ONIOM input file (0/-1) \n";
        print "\nUsage: setmvflg [options] \n";
        print "\t-b \t\tUse ONB file coordinates\n";
        print "\t-d? \t\tDebug print (?:0~3) \n";
	print "\t-h\t\tprint full documentation\n";
	print "\t-i filename\tA valid ONIOM input file file.\n";
        print "\t-near number\tDistance in angstrom to define moving region within core residues (Default 6.0)\n";
	print "\t-o filename\tOutput ONIOM input file name, default to newoniom.gjf\n";
        print "\t-onb filename\tONB file name, generated by pdb2oniom\n";
	print "\t-q\t\tQuiet mode\n";
        print "\t-resid listfile\tFile that contains the list of core residues\n";
	print "\n";
        exit;
}


1;

=head1 EXAMPLES

=over

=item setmvflg

Called without any parameters, SETMVFLG will display usage information.
If B<-h> or B<--help> is passed, then the full SETMVFLG documentation is displayed via perldoc.

=item setmvflg -i foo.gjf -onb foo.onb -resid corelist.txt -near 7 -o foonew.gjf

SETMVFLG reads foo.gjf, foo.onb and corelist.txt files, and collects coordinates from foo.gjf, residue
information from foo.onb file, and core residues information from corelist.txt. Then, SETMVFLG
resets optimization flag so that all the residues within 7.0 Angstroms from any core residue are free
to move during the geometry optimization, and creates a Gaussian input file named foonew.gjf
with the new flag setup.


=back


=head1 VERSION

1.0

=head1 AUTHOR

Peng Tao, E<lt>tao.21@osu.eduE<gt>


=head1 COPYRIGHT

Copyright (c) 2009~2010 by Peng Tao


=cut


